<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.yeondodemo.repository.history.mapper.QueryHistoryMapper">

    <insert id="save" parameterType="com.example.yeondodemo.dto.QueryHistory">
        insert into QUERYHISTORY (workspaceId,paperId, idx, content, who,  editDate, positionString, context, extraPaperId)
        values (#{workspaceId}, #{paperid}, #{idx}, #{content}, #{who}, CURRENT_DATE, #{positionString},#{context}, #{extraPaperId});
        <selectKey keyProperty="id" resultType="Long">
            SELECT LAST_INSERT_ID();
        </selectKey>
    </insert>

    <select id="findByUsernameAndPaperid" resultType="com.example.yeondodemo.dto.PaperHistory">
        select content, who, id, score,positionString, context, extraPaperId
        from QUERYHISTORY
        where paperId = #{paperIsd} and workspaceId= #{workspaceId}
        order by id ASC
    </select>



    <select id="getLastIdx" resultType="Long">
        select idx
        from QUERYHISTORY
        where paperId = #{paperId} and workspaceId= #{workspaceId}
        order by idx DESC LIMIT 1
    </select>
    <select id="findByUsername" resultType="com.example.yeondodemo.dto.history.PaperHistoryDTO">
        select content, who, p.paperId as paperid, p.title as title, p.url as url, p.userPdf as userPdf
        from QUERYHISTORY as q
            INNER JOIN PAPER as p
            ON q.paperId = p.paperId
        where q.workspaceId= #{workspaceId}
        order by id DESC
    </select>


    <select id="findByUsernameAndPaperIdOrderQA" resultType="com.example.yeondodemo.dto.PaperHistory">
        select content, who, id, score, positionString, context, extraPaperId
        from QUERYHISTORY
        where paperId = #{paperIsd} and workspaceId= #{workspaceId}
        order by idx ASC
    </select>

    <select id="findByUserAndIdOrderQA4Python" resultType="com.example.yeondodemo.dto.PaperHistory">
        SELECT content, who, id, score, positionString, context, extraPaperId
        FROM (
                 SELECT content, who, id, idx, score, positionString, context, extraPaperId
                 FROM QUERYHISTORY AS q
                 WHERE paperId = #{paperIsd} AND workspaceId= #{workspaceId}
                 ORDER BY idx DESC
                     LIMIT 10
             ) AS subquery
        ORDER BY idx ASC;
    </select>

    <select id="findByUsernameAndId" resultType="com.example.yeondodemo.dto.PaperHistory">
        SELECT content, who, id, score, positionString, context, extraPaperId
        FROM QUERYHISTORY
        WHERE id = #{id} AND workspaceId = #{workspaceId};
    </select>

    <update id="updateScore">
        update QUERYHISTORY
        set score = #{score}
        where id = #{id};
    </update>

    <update id="updateToken">
        update QUERYHISTORY
        set  totalCost= #{token.totalCost},
             totalTokens= #{token.totalTokens},
             promptTokens=#{token.promptTokens},
             completionTokens=#{token.completionTokens}
        where id = #{id};
    </update>





</mapper>