# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - uses: actions/checkout@v3
    - run: touch ./src/main/resources/application.properties
    - run: echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.properties
    - run: cat ./src/main/resources/application.properties

    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build
        
    - name: Make Directory
      run: mkdir dist
      
    - name: Copy properties
      run: cp ./src/main/resources/application.properties ./dist/

    - name: Copy jar
      run: cp ./build/libs/*.jar ./dist/

    - name: Copy yml
      run: cp ./*.yml ./dist/

    - name: Copy sh
      run: cp -r ./scripts ./dist/

    - name: zip
      run: tar -zcvf deploy.tar.gz ./dist

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
    - name: Copy script
      run: cp ./scripts/*.sh ./deploy

    - name: Upload to S3
      run: |
        aws s3 cp \
        --region ap-northeast-2 \
        --acl private \
        ./deploy.tar.gz \
        s3://yeondoobe-cicd/deploy.tar.gz  \
      # Deploy
    - name: Deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws deploy create-deployment \
        --application-name yeondoo-BE \
        --deployment-config-name CodeDeployDefault.AllAtOnce \
        --deployment-group-name BE-SERVER \
        --ignore-application-stop-failures \
        --file-exists-behavior OVERWRITE \
        --s3-location bucket=yeondoobe-cicd,bundleType=tar,key=deploy.tar.gz \
        --region ap-northeast-2